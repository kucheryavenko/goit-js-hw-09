{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAuBX,SAApBI,EAAcC,EAAUC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACHN,EACAI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAuCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEzDA,MAKS,SAAXS,EAAgBC,GACrBC,QAAQC,IAAIF,GACZpB,EAAAuB,OAAOC,QAAQJ,EAAQ,CACnBK,SAAS,IAKjB,SAASC,EAAeC,GACpBN,QAAQC,IAAIK,GACZ3B,EAAAuB,OAAOK,QAAQD,EAAO,CAClBF,SAAS,IA9C4BvB,EAAtC2B,iBAAiB,UAGM,SAAZC,GACdA,EAAIC,iBAMJ,IAJA,IAAMC,EAAYC,OAAO3B,EAAO4B,OAC1BC,EAAcF,OAAO1B,EAAS2B,OAChCE,EAAaH,OAAO5B,EAAQ6B,OAEvBG,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACpC7B,EAAc6B,EAAGD,GACXE,KAAKnB,GACNoB,MAAMb,GAEVU,GAAcJ,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'; // Импорт библиотеки \"notify\"\n\n// Находим наши элементы и создаём переменные\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\n// Вешаем слушателя на форму и по сабмиту запускаем ф-цию\nformEl.addEventListener('submit', onSubmit);\n\n// Ф-ция собирает промисы с интервалом\nfunction onSubmit(evt) {\n    evt.preventDefault();\n\n    const stepValue = Number(stepEl.value);\n    const amountValue = Number(amountEl.value);\n    let delayValue = Number(delayEl.value);\n\n    for (let i = 1; i <= amountValue; i += 1) {\n       createPromise(i, delayValue)\n            .then(onMakeFulfilled)\n           .catch(onMakeRejected);\n        \n        delayValue += stepValue;\n    }\n}\n\n// Ф-ция создает и возвращает промисы\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    \n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            } else {\n                reject(`❌ Rejected promise ${position} in ${delay}ms`);\n            }\n        }, delay);\n    }); \n}\n\n// Ф-ция выводит результат resolve\nfunction onMakeFulfilled(result) {\n    console.log(result);\n    Notify.success(result, {\n        useIcon: false,\n    });\n}\n\n// Ф-ция выводит результат reject\nfunction onMakeRejected(error) {\n    console.log(error);\n    Notify.failure(error, {\n        useIcon: false,\n    });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$onMakeFulfilled","result","console","log","Notify","success","useIcon","$ce04d3a99e08e73b$var$onMakeRejected","error","failure","addEventListener","evt","preventDefault","stepValue","Number","value","amountValue","delayValue","i","then","catch"],"version":3,"file":"03-promises.3954be93.js.map"}